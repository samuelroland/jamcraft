// Methods for live edition of samples and tracks
syntax = "proto3";

import "google/protobuf/empty.proto";

option java_multiple_files = true;
option java_package = "amt";

package edit;

service EditService {
    // Server-side streaming to broadcast positions of samples changed by others
    rpc GetSamplePositions(google.protobuf.Empty) returns (stream SampleInfo);
    // Unary sending to let clients change position of samples
    rpc ChangeSamplePosition(SampleInfo) returns (google.protobuf.Empty);
    // Unary sending to let clients remove a sample from the project, giving the samples_tracks.id !
    rpc RemoveSample(SampleInstanceId) returns (google.protobuf.Empty);

    // Server-side streaming to broadcast updated tracks, it allows to update track names in live
    rpc GetUpdatedTracks(google.protobuf.Empty) returns (stream TrackInfo);
    // Unary sending to update track info or create one
    rpc ChangeTrackInfo(TrackInfo) returns (google.protobuf.Empty);

    // Server-side streaming to broadcast new sample uploads, useful to update the local library
    rpc GetSampleUploads(google.protobuf.Empty) returns (stream SampleInfo);
}

message SampleInstanceId {
    uint32 instanceId = 1;// sample_tracks.id !
}

message SampleInfo {
    uint32 instanceId = 1;// sample_tracks.id !
    uint32 sampleId = 2;
    uint32 trackId = 3;
    double startTime = 4;
}

message TrackInfo {
    uint32 trackId = 1;
    string name = 2;
}
